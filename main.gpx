{'version': 1.0, 'sp_code': [['@import', 'std/stdlib.gpy'], ['@import', 'testclass.gpc'], [''], ['@action', 'main', '{'], ['', '', '', '', 'f', '=', 'testclass.init'], ['', '', '', '', 't', '=', 'testclass.init'], [''], ['', '', '', '', 's', '=', 'meeem'], ['', '', '', '', 'if', 's', '>', '2', '{'], ['', '', '', '', '', '', '', '', 'print', '"yee"'], ['', '', '', '', '}'], ['}'], [''], ['@action', 'meeem', '{'], ['', '', '', '', 'return', '3920'], ['}'], [''], ['@action', 'soos', '{'], ['', '', '', '', 'print', '"mm"'], ['}'], ['@import', 'std/array.gpy'], ['@import', 'std/tkwrap.gpy'], ['@import', 'std/classtools.gpy'], [''], ['@action', 'global', '{'], ['', '', '', '', '#windisplay', 'Error', '*log'], [''], ['', '', '', '', '#', '0', 'for', 'slow', '1', 'for', 'fast'], ['', '', '', '', 'exec_mode', '=', '1'], [''], ['', '', '', '', 'stdlib_version', '=', '0.5'], [''], ['', '', '', '', 'height_uuid', '=', '0'], ['}'], [''], ['@action', 'every_action', '{'], ['', '', '', '', 'py', '2', '{'], ['', '', '', '', '', '', '', '', 'try:'], ['', '', '', '', '', '', '', '', '', '', '', '', 'if', 'len(ERRORS)', '>', '0:'], ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'self.win.update()'], ['', '', '', '', '', '', '', '', 'except:'], ['', '', '', '', '', '', '', '', '', '', '', '', 'pass'], ['', '', '', '', '}'], ['}'], [''], ['@action', 'delay', '{'], ['', '', '', '', 'py', '2', '{'], ['', '', '', '', '', '', '', '', 'import', 'time'], ['', '', '', '', '', '', '', '', 'time.sleep(stack["arg[0]"])'], ['', '', '', '', '}'], ['}'], [''], ['@action', 'print', '{'], ['', '', '', '', 'py', '2', '{'], ['', '', '', '', '', '', '', '', 'print(stack["arg[0]"])'], ['', '', '', '', '}'], ['}'], [''], ['@action', 'thread', '{'], ['', '', '', '', 'py', '2', '{'], ['', '', '', '', '', '', '', '', 'print(stack["arg[0]"][1:])'], ['', '', '', '', '', '', '', '', 'threading.Thread(target=self.action,', 'args=[stack["arg[0]"][1:],', '[]]).start()'], ['', '', '', '', '}'], ['}'], [''], ['@action', 'input', '{'], ['', '', '', '', 'py', '2', '{'], ['', '', '', '', '', '', '', '', 'try:'], ['', '', '', '', '', '', '', '', '', '', '', '', 'var', '=', 'input(stack["arg[0]"]', '+', '"', '")'], ['', '', '', '', '', '', '', '', '', '', '', '', 'self.stack["return"]', '=', 'var'], ['', '', '', '', '', '', '', '', 'except:'], ['', '', '', '', '', '', '', '', '', '', '', '', 'error("missing', 'argument', 'text', 'after', 'input",', 'self.cursor_line,', 'self.cursor_word)'], ['', '', '', '', '}'], ['}'], [''], ['"prints name string and type of arg[0]"', 'name', 'string', 'and', 'type', 'of', 'arg[0]"'], ['@action', 'get_type', '{'], ['', '', '', '', 'py', '2', '{'], ['', '', '', '', '', '', '', '', 'print(f\'{stack["arg[0]"][1:]}', ':', '{stack[stack["arg[0]"][1:]]}', ':', '{type(stack[stack["arg[0]"][1:]])}\')'], ['', '', '', '', '}'], ['}'], [''], ['@action', 'stradd', '{'], ['', '', '', '', 'py', '2', '{'], ['', '', '', '', '', '', '', '', 'str1', '=', 'str(stack["arg[0]"])'], ['', '', '', '', '', '', '', '', 'str2', '=', 'str(stack["arg[1]"])'], ['', '', '', '', '', '', '', '', 'stack["return"]', '=', 'str1', '+', 'str2'], ['', '', '', '', '}'], ['}'], [''], ['"retruns the value of a pointer"', 'the', 'value', 'of', 'a', 'pointer"'], ['@action', 'value', '{'], ['', '', '', '', 'py', '2', '{'], ['', '', '', '', '', '', '', '', 'stack["return"]', '=', 'stack[stack["arg[0]"][1:]]'], ['', '', '', '', '}'], ['}'], [''], ['@action', 'return', '{'], ['', '', '', '', 'py', '2', '{'], ['', '', '', '', '', '', '', '', 'stack["return"]', '=', 'stack["arg[0]"]'], ['', '', '', '', '}'], ['}'], [''], ['@action', 'genuuid', '{'], ['', '', '', '', 'height_uuid', '=', 'height_uuid', '+', '0.1'], ['', '', '', '', 'return', 'height_uuid'], ['}'], [''], ['"waits for user to press Enter before exiting"', 'for', 'user', 'to', 'press', 'Enter', 'before', 'exiting"'], ['@action', 'user_confirm_exit', '{'], ['', '', '', '', 'py', '2', '{'], ['', '', '', '', '', '', '', '', 'import', 'os'], ['', '', '', '', '', '', '', '', 'print("----------EXIT---------")'], ['', '', '', '', '', '', '', '', 'l', '=', '[]'], ['', '', '', '', '', '', '', '', 'for', 'i', 'in', 'self.actions:'], ['', '', '', '', '', '', '', '', '', '', '', '', 'l.append(i)'], ['', '', '', '', '', '', '', '', 'print(l)'], ['', '', '', '', '', '', '', '', 'print(f"{self.stack', '=', '}")'], ['', '', '', '', '', '', '', '', 'print(f"{self.inspected_actions', '=', '}")'], ['', '', '', '', '', '', '', '', 'print("\\nPress', 'Enter', 'to', 'exit")'], ['', '', '', '', '', '', '', '', 'os.system("pause', '>', 'nul")'], ['', '', '', '', '}'], ['}'], ['', '', '', '', '', '', '', '', '', '', '', '', 'CONVERTING'], [''], ['@action', 'convert.string', '{'], ['', '', '', '', 'py', '2', '{'], ['', '', '', '', '', '', '', '', 'stack["return"]', '=', 'str(stack["arg[0]"])'], ['', '', '', '', '}'], ['}'], [''], ['@action', 'convert.int', '{'], ['', '', '', '', 'py', '2', '{'], ['', '', '', '', '', '', '', '', 'stack["return"]', '=', 'int(stack["arg[0]"])'], ['', '', '', '', '}'], ['}'], [''], ['@action', 'convert.float', '{'], ['', '', '', '', 'py', '2', '{'], ['', '', '', '', '', '', '', '', 'stack["return"]', '=', 'float(stack["arg[0]"])'], ['', '', '', '', '}'], ['}'], [''], ['@action', 'array', '{'], ['', '', '', '', 'py', '2', '{'], ['', '', '', '', '', '', '', '', 'stack["return"]', '=', '[]'], ['', '', '', '', '}'], ['', '', '', '', 'return_type', '"action"'], ['}'], [''], ['@action', 'append', '{'], ['', '', '', '', 'object', '=', 'arg[0]'], ['', '', '', '', 'to_append', '=', 'arg[1]'], ['', '', '', '', 'py', '2', '{'], ['', '', '', '', '', '', '', '', 'stack["object"].append(stack["to_append"])'], ['', '', '', '', '}'], ['}'], [''], ['@action', 'tk-window', '{'], ['', '', '', '', 'py', '2', '{'], ['', '', '', '', '', '', '', '', 'stack["return"]', '=', 'Tk()'], ['', '', '', '', '}'], ['}'], [''], ['#', 'takes', 'window', 'as', 'attribute'], ['@action', 'tk-loop', '{'], ['', '', '', '', 'py', '2', '{'], ['', '', '', '', '', '', '', '', 'stack["arg[0]"].mainloop()'], ['', '', '', '', '}'], ['}'], [''], ['#', 'args:', 'window,', 'text,', 'command'], ['@action', 'tk-button', '{'], ['', '', '', '', 'py', '2', '{'], ['', '', '', '', '', '', '', '', 'stack["return"]', '=', 'ttk.Button(stack["arg[0]"],', 'text=stack["arg[1]"])'], ['', '', '', '', '', '', '', '', 'stack["return"].pack()'], ['', '', '', '', '}'], ['}'], ['"tools for creating classes with gpy"', 'for', 'creating', 'classes', 'with', 'gpy"'], [''], ['@action', 'obj', '{'], ['', '', '', '', '"takes a classname as an argument and returns an uuid adress pointing to a dict"', 'a', 'classname', 'as', 'an', 'argument', 'and', 'returns', 'an', 'uuid', 'adress', 'pointing', 'to', 'a', 'dict"'], [''], ['', '', '', '', 'classname', '=', 'arg[0]'], ['', '', '', '', 'uuid', '=', 'genuuid'], [''], ['', '', '', '', 'py', '2', '{'], ['', '', '', '', '', '', '', '', 'var', '=', 'stack["classname"][1:]'], ['', '', '', '', '', '', '', '', 'stack["var_"]', '=', 'var'], ['', '', '', '', '', '', '', '', 'uuid', '=', 'stack["uuid"]'], ['', '', '', '', '', '', '', '', 'stack[str(var)', '+', 'str(uuid)]', '=', '{}'], ['', '', '', '', '}'], ['', '', '', '', 'obj_address', '=', 'stradd', 'var_', 'uuid'], ['', '', '', '', 'return', 'obj_address'], ['}'], [''], ['@action', 'setattr', '{'], ['', '', '', '', '"creates a class attribute in [obj_address] with name [variable_name] and the content [variable_content]"', 'a', 'class', 'attribute', 'in', '[obj_address]', 'with', 'name', '[variable_name]', 'and', 'the', 'content', '[variable_content]"'], [''], ['', '', '', '', 'obj_address', '=', 'arg[0]'], ['', '', '', '', 'variable_name', '=', 'arg[1]'], ['', '', '', '', 'variable_content', '=', 'arg[2]'], [''], ['', '', '', '', 'py', '2', '{'], ['', '', '', '', '', '', '', '', 'variable_name', '=', 'stack["variable_name"]'], ['', '', '', '', '', '', '', '', 'variable_content', '=', 'stack["variable_content"]'], ['', '', '', '', '', '', '', '', 'obj_address', '=', 'stack["obj_address"]'], ['', '', '', '', '', '', '', '', 'stack[obj_address][variable_pointer]', '=', 'variable_content'], ['', '', '', '', '}'], ['}'], [''], ['@action', 'attr', '{'], ['', '', '', '', '"creates a class attribute in [obj_address] of a pointer to a variable"', 'a', 'class', 'attribute', 'in', '[obj_address]', 'of', 'a', 'pointer', 'to', 'a', 'variable"'], [''], ['', '', '', '', 'obj_address', '=', 'arg[0]'], ['', '', '', '', 'variable_pointer', '=', 'arg[1]'], ['', '', '', '', 'variable_content', '=', 'value', 'arg[1]'], [''], ['', '', '', '', 'py', '2', '{'], ['', '', '', '', '', '', '', '', 'variable_pointer', '=', 'stack["variable_pointer"][1:]'], ['', '', '', '', '', '', '', '', 'variable_content', '=', 'stack["variable_content"]'], ['', '', '', '', '', '', '', '', 'obj_address', '=', 'stack["obj_address"]'], ['', '', '', '', '', '', '', '', 'stack[obj_address][variable_pointer]', '=', 'variable_content'], ['', '', '', '', '}'], ['}'], [''], ['@action', 'getattr', '{'], ['', '', '', '', '"returns the content of a class attribute from a pointer"', 'the', 'content', 'of', 'a', 'class', 'attribute', 'from', 'a', 'pointer"'], [''], ['', '', '', '', 'obj_address', '=', 'arg[0]'], ['', '', '', '', 'variable_pointer', '=', 'arg[1]'], [''], ['', '', '', '', 'py', '2', '{'], ['', '', '', '', '', '', '', '', 'variable_pointer', '=', 'stack["variable_pointer"][1:]'], ['', '', '', '', '', '', '', '', 'obj_address', '=', 'stack["obj_address"]'], ['', '', '', '', '', '', '', '', 'stack["return"]', '=', 'stack[obj_address][variable_pointer]'], ['', '', '', '', '}'], ['}'], [''], ['@action', 'testclass.init', '{'], ['', '', '', '', '#', 'create', 'object'], ['', '', '', '', 'self', '=', 'obj', '*testclass'], [''], ['', '', '', '', '#', 'adding', 'attribute'], ['', '', '', '', 'soostext', '=', '"lool"'], ['', '', '', '', 'attr', 'self', '*soostext'], [''], [''], ['', '', '', '', 'return', 'self'], ['}'], [''], ['@action', 'testclass.test', '{'], ['', '', '', '', 'self', '=', 'arg[0]'], ['', '', '', '', 'f', '=', 'getattr', 'self', '*soostext'], ['', '', '', '', 'print', 'f'], ['}']], 'actions': {'main': [3, None, None], 'meeem': [13, None, None], 'soos': [17, None, None], 'global': [24, None, None], 'every_action': [35, None, None], 'delay': [45, None, None], 'print': [52, None, None], 'thread': [58, None, None], 'input': [65, None, None], 'get_type': [76, None, None], 'stradd': [82, None, None], 'value': [91, None, None], 'return': [97, None, None], 'genuuid': [103, None, None], 'user_confirm_exit': [109, None, None], 'convert.string': [125, None, None], 'convert.int': [131, None, None], 'convert.float': [137, None, None], 'array': [143, None, None], 'append': [150, None, None], 'tk-window': [158, None, None], 'tk-loop': [165, None, None], 'tk-button': [172, None, None], 'obj': [180, None, None], 'setattr': [196, None, None], 'attr': [211, None, None], 'getattr': [226, None, None], 'testclass.init': [239, None, None], 'testclass.test': [251, None, None]}, 'stack': {'log': []}}